
import copy
import sys
sys.path.append("../")
from bit_board import BitBoard
from eval import evaluate

def maxlevel(board, own, opponent, depth):
    evaluation1 = []
    if(depth <= 0):
        evaluation1 += [evaluate(board, own)]
        return evaluation1
    board.listing_puttable(own)
    for coord in board.get_puttable_list():
        board1 = copy.deepcopy(board)
        board1.put_stone(int(coord[0]),int(coord[1]),own)
        evaluation = minlevel(board1, own, opponent, depth-1)
        evaluation_max = evaluate(board1,own)
        evaluation1 += [evaluation_max]
        if(min(evaluation) > evaluation_max):
            evaluation_max = min(evaluation)
            evaluation1 += [evaluation_max]
    return evaluation1

def minlevel(board, own, opponent, depth):
    evaluation2 = []
    if(depth <= 0):
        evaluation2 += [evaluate(board, opponent)]
        return evaluation2    
    board.listing_puttable(opponent)
    print(board.get_puttable_list())
    for coord in board.get_puttable_list():
        board2 = copy.deepcopy(board)
        board2.put_stone(int(coord[0]),int(coord[1]),opponent)
        evaluation = maxlevel(board2, own, opponent, depth-1)
        evaluation_min = evaluate(board2,opponent)
        print(evaluation_min)
        evaluation2 += [evaluation_min]
        if(max(evaluation) < evaluation_min):
            evaluation_min = max(evaluation)
            evaluation2 += [evaluation_min]
    return evaluation2

if __name__ == "__main__":
    b = BitBoard()
    b.init_board("../init.csv")
    b.display_board()
    cb = copy.deepcopy(b)
    print("深さいくつ？")
    depth = int(input())
    print(maxlevel(cb, 1, cb.get_opponent(1), depth))
    print("正常")
